Testcase 0:
	Code: 
		./client create project1 2 3
Testcase 1:
	Code:
		./client update 1 2 3 4

Testcase 2: 
	Code:
		./client configure
		
Testcase 3:
	Code: 
		./client add 1 2

Testcase 4:
	Code:
		./client remove 1 2

Testcase 5:
	Code:
		./client create project1

Testcase 6:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		./client history project1
	Server:
		./server 9123

Testcase 7:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		./client currentversion project1
	Server:
		./server 9123
		
Testcase 8:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		./client add project1 file1.txt
	Server:
		./server 9123
		
Testcase 9:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		./client remove project1 file1.txt
	Server:
		./server 9123	
		
Testcase 10:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		touch project1/file1.txt
		./client add project1 file1.txt
	Server:
		./server 9123
		
Testcase 11:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		./client create project1
	Server:
		./server 9123	
	
Testcase 12:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		touch project1/file1.txt
		./client add project1 file1.txt
		./client add project1 file1.txt
	Server:
		./server 9123
		
Testcase 13:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
	Server:
		./server 9123

Testcase 14:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
		./client push project1
	Server:
		./server 9123
				
Testcase 15:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
		./client push project1
		echo testInputModified > project1/file1.txt
		./client commit project1
		./client push project1
	Server:
		./server 9123
		
Testcase 16:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
		./client push project1
		./client remove project1 file1.txt
		./client commit project1
		./client push project1
	Server:
		./server 9123		
		
Testcase 17:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
		./client push project1
		./client history project1
	Server:
		./server 9123

Testcase 18:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		./client add project1 file1.txt
		./client commit project1
		./client push project1
		./client currentversion project1
	Server:
		./server 9123

Testcase 19:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		echo testinput2 > project1/file2.txt
		echo testinput3 > project1/file3.txt
		echo testinput4 > project1/file4.txt
		./client add project1 file1.txt
		./client add project1 file2.txt
		./client add project1 file3.txt
		./client add project1 file4.txt
		./client commit project1
		./client push project1
	Server:
		./server 9123

Testcase 20:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		echo testinput2 > project1/file2.txt
		echo testinput3 > project1/file3.txt
		echo testinput4 > project1/file4.txt
		./client add project1 file1.txt
		./client add project1 file2.txt
		./client add project1 file3.txt
		./client add project1 file4.txt
		./client commit project1
		./client push project1
		./client rollback project1 0
	Server:
		./server 9123

Testcase 21:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		echo testinput2 > project1/file2.txt
		echo testinput3 > project1/file3.txt
		echo testinput4 > project1/file4.txt
		./client add project1 file1.txt
		./client add project1 file2.txt
		./client add project1 file3.txt
		./client add project1 file4.txt
		./client commit project1
		./client push project1
		./client rollback project1 0
		./client update
		./client upgrade
	Server:
		./server 9123

Testcase 22:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		echo testinput2 > project1/file2.txt
		echo testinput3 > project1/file3.txt
		echo testinput4 > project1/file4.txt
		./client add project1 file1.txt
		./client add project1 file2.txt
		./client add project1 file3.txt
		./client add project1 file4.txt
		./client commit project1
		./client push project1
		rm -rf project1
		./client checkout project1
	Server:
		./server 9123
		
Testcase 23:
	Code:
	Client:
		./client configure localhost 9123
		./client create project1
		echo testinput > project1/file1.txt
		echo testinput2 > project1/file2.txt
		echo testinput3 > project1/file3.txt
		echo testinput4 > project1/file4.txt
		./client add project1 file1.txt
		./client add project1 file2.txt
		./client add project1 file3.txt
		./client add project1 file4.txt
		./client commit project1
		./client push project1
		./client destroy project1
	Server:
		./server 9123
		



(Assume client has already been configured, and server is running and sample.sample is any sample file in testfiles)
All these files will be contained in a testfiles directory:
    The following were also tested using the following file/directory types:
    a variety of file types, including .c, and .txt
    hidden files/directories
    empty files/directories
    Files containing all ascii characters

    The following were also tested using incorrect amount of arguments, and out-of-order operations.

    All Operations were tested for if the server stopped mid-run.

Testing: create

Test Cases:
Creating a project that is already in the server
    ./client.out create <Project Name>
    rm -rf <Project Name>
    ./client.out create <Project Name>

Creating a project that is already on the client
    ./client.out create <Project Name>
    rm -rf <Project Name>
    ./client.out create <Project Name>

Testing: destroy

Test Cases:
Destroying a project that is in the client, but not still in the server
    mkdir <Project Name>
    ./client.out destroy <Project Name>

Destroying a project in the server, but not checked out or updated in the client or Destroying a project in the server, but not yet upgraded in the client
    ./client.out create <Project Name>
    rm -rf <Project Name>
    ./client.out destroy <Project Name>


Testing: Add->Commit->Push

Test Cases:
committing without adding
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

pushing with no .Commit
    ./client.out push <Project Name>

Committing multiple files at a time
    ./client.out add <Project Name> sample.sample
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

deleting file from client then re-creating it to commit
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    rm -f <Project Name>/sample.sample
    nano sample.sample
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

Deleting file after add
    ./client.out add <Project Name> sample.sample
    rm -f <Project Name>/sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

Testing: update -> upgrade

Test Cases:
Trying to upgrade before update or without a .Update
    ./client.out upgrade <Project Name>

Attempting to update something not on the server
    ./client.out update <Project Name>
    ./client.out upgrade <Project Name>

Updating something already up to date
    ./client.out update <Project Name>
    ./client.out upgrade <Project Name>
    ./client.out update <Project Name>
    ./client.out upgrade <Project Name>

Updating something more than one version behind
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out rollback <Project Name> 0
    ./client.out update <Project Name>
    ./client.out upgrade <Project Name>

Testing: remove

Test Cases:
trying to commit after adding, but then removing
    ./client.out add <Project Name> sample.sample
    ./client.out remove <Project Name>
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

Committing files after adding 2 files, but removing one of them
    ./client.out add <Project Name> sample.sample
    ./client.out add <Project Name> sample.sample
    ./client.out remove <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>

Testing: Rollback

Test Cases:
Doing rollback on a project that was never committed
    ./client.out create <Project Name>
    ./client.out rollback <Project Name> 0

Doing rollback on an invalid version number
    ./client.out create <Project Name>
    ./client.out rollback <Project Name> 4

Testing: History

Test Cases:
Doing a rollback, and then checking history
    ./client.out add <Project Name> <Filepath>
    ./client.out commit <Project Name>
    ./client.out push <Project Name> <Filepath>
    ./client.out rollback 0
    ./client.out history <Project Name>

Checking history after adding a file, but not committing or pushing
    ./client.out add <Project Name> <Filepath>
    ./client.out history <Project Name>

Checking history after creating the project
	./client.out create <Project Name>
	./client.out history <Project Name>

Testing: currentversion

Test Cases:
pushing updates a few times, then running currentversion
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out currentversion <Project Name>

Doing a rollback, and then checking currentversion
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out add <Project Name> sample.sample
    ./client.out commit <Project Name>
    ./client.out push <Project Name>
    ./client.out rollback <Project Name> 1
    ./client.out currentversion <Project Name>

Testing: checkout

Test Cases:
checking out a project already in the client
    mkdir <Project Name>
    ./client.out checkout <Project Name>

Checking out a project not in the server
    ./client.out checkout <Project Name>
